---
import { Icon } from 'astro-icon/components';
import { passwordStore } from '../stores/passwordStore';
const { copied } = Astro.props;
---

<div class="container">
  <input
    id="passwordInput"
    type="text"
    placeholder="P4$5W0rD!"
    readonly
    value={passwordStore.get()}
    class="heading-large"
  />
  <button id="copyButton" aria-label="Copy Password" disabled>
    <Icon name="icon-copy" />
  </button>
  <span id="copiedMessage" class="copied-message">{copied}</span>
</div>

<script>
  import { passwordStore } from '../stores/passwordStore';
  document.addEventListener('DOMContentLoaded', () => {
    const copyToClipboard = () => {
      const input = document.getElementById(
        'passwordInput'
      ) as HTMLInputElement;
      const copiedMessage = document.getElementById('copiedMessage');
      if (input && copiedMessage) {
        navigator.clipboard
          .writeText(input.value)
          .then(() => {
            copiedMessage.classList.add('show');
            setTimeout(() => {
              copiedMessage.classList.remove('show');
            }, 2000);
          })
          .catch((err) => {
            console.error('Failed to copy text: ', err);
          });
      }
    };

    const copyButton = document.getElementById(
      'copyButton'
    ) as HTMLButtonElement;
    if (copyButton) {
      copyButton.addEventListener('click', copyToClipboard);
    }

    const toggleCopyButton = () => {
      const passwordInput = document.getElementById(
        'passwordInput'
      ) as HTMLInputElement;
      if (passwordInput && copyButton) {
        if (passwordInput.value.trim() === '') {
          copyButton.disabled = true;
          copyButton.classList.add('disabled');
        } else {
          copyButton.disabled = false;
          copyButton.classList.remove('disabled');
        }
      }
    };

    passwordStore.listen(() => {
      const passwordInput = document.getElementById(
        'passwordInput'
      ) as HTMLInputElement;
      if (passwordInput) {
        passwordInput.value = passwordStore.get();
        toggleCopyButton();
      }
    });

    toggleCopyButton();
  });
</script>

<style>
  .container {
    background-color: var(--color-dark-grey);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 19px 32px;
    position: relative;
    height: 80px;
    width: 100%;
  }

  input {
    background-color: transparent;
    border: none;
    color: var(--color-almost-white);
    transition: opacity 0.3s;
    opacity: 0.25;
    width: 100%;
  }

  input:not(:placeholder-shown) {
    opacity: 1;
  }

  input:focus {
    outline: none;
  }

  button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    height: 24px;
    width: 21px;
  }

  button.disabled {
    cursor: not-allowed;
  }

  button.disabled [data-icon] {
    color: var(--color-neon-green);
  }

  button.disabled:hover [data-icon] {
    color: var(--color-neon-green);
  }

  [data-icon] {
    color: var(--color-neon-green);
    transition: color 0.3s ease-in-out;
    height: 24px;
    width: 21px;
  }

  [data-icon]:hover {
    color: #fff;
  }

  button.disabled [data-icon]:hover {
    color: var(--color-neon-green);
  }

  .copied-message {
    position: absolute;
    top: 50%;
    right: 69px;
    transform: translateY(-50%);
    color: var(--color-neon-green);
    opacity: 0;
    transition: opacity 0.3s;
  }

  .copied-message.show {
    opacity: 1;
  }

  @media (max-width: 480px) {
    .container {
      height: 64px;
      padding: 16px;
    }
  }
</style>
